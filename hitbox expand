-- HUB POBREZA V3.0 - PREMIUM EDITION
-- Design completamente redesenhado e otimizado
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- ===== CONFIGURA√á√ïES =====
local config = {
    headSize = 20,
    bodySize = 20,
    currentLang = "pt",
    bodyEnabled = false,
    headEnabled = false,
    guiVisible = true,
    theme = "dark" -- dark/light
}

local originals = {}
local connections = {}
local gui = {}

-- ===== SISTEMA DE IDIOMAS =====
local texts = {
    pt = {
        title = "üî• HUB POBREZA V3.0",
        subtitle = "PREMIUM EDITION",
        bodyBtn = "üíÄ HITBOX CORPO",
        headBtn = "üéØ HITBOX CABE√áA",
        langBtn = "üåê ENGLISH",
        sizeLabel = "TAMANHO HITBOX",
        statusOn = "ATIVADO",
        statusOff = "DESATIVADO",
        credits = "Desenvolvido por Poverty Team",
        hotkey = "Pressione 'F' para mostrar/ocultar",
        activeCount = "recursos ativos"
    },
    en = {
        title = "üî• POVERTY HUB V3.0",
        subtitle = "PREMIUM EDITION",
        bodyBtn = "üíÄ BODY HITBOX",
        headBtn = "üéØ HEAD HITBOX",
        langBtn = "üåê PORTUGU√äS",
        sizeLabel = "HITBOX SIZE",
        statusOn = "ENABLED",
        statusOff = "DISABLED",
        credits = "Developed by Poverty Team",
        hotkey = "Press 'F' to show/hide",
        activeCount = "features active"
    }
}

-- ===== CRIA√á√ÉO DA GUI =====
local function createGUI()
    -- ScreenGui Principal
    gui.screen = Instance.new("ScreenGui")
    gui.screen.Name = "PovertyHubV3"
    gui.screen.Parent = LocalPlayer:WaitForChild("PlayerGui")
    gui.screen.ResetOnSpawn = false
    gui.screen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Frame Principal
    gui.main = Instance.new("Frame")
    gui.main.Name = "MainFrame"
    gui.main.Size = UDim2.new(0, 320, 0, 400)
    gui.main.Position = UDim2.new(0, 20, 0.5, -200)
    gui.main.BackgroundColor3 = Color3.new(0.05, 0.05, 0.05)
    gui.main.BorderSizePixel = 0
    gui.main.ClipsDescendants = true
    gui.main.Parent = gui.screen
    
    -- Efeitos visuais do frame principal
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 15)
    mainCorner.Parent = gui.main
    
    local mainStroke = Instance.new("UIStroke")
    mainStroke.Color = Color3.new(1, 0.85, 0)
    mainStroke.Thickness = 3
    mainStroke.Parent = gui.main
    
    local mainGradient = Instance.new("UIGradient")
    mainGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(0.08, 0.08, 0.08)),
        ColorSequenceKeypoint.new(1, Color3.new(0.02, 0.02, 0.02))
    })
    mainGradient.Rotation = 135
    mainGradient.Parent = gui.main
    
    -- Sombra do frame
    local shadow = Instance.new("Frame")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 6, 1, 6)
    shadow.Position = UDim2.new(0, -3, 0, -3)
    shadow.BackgroundColor3 = Color3.new(0, 0, 0)
    shadow.BackgroundTransparency = 0.7
    shadow.ZIndex = gui.main.ZIndex - 1
    shadow.Parent = gui.main
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 18)
    shadowCorner.Parent = shadow
    
    -- ===== HEADER =====
    gui.header = Instance.new("Frame")
    gui.header.Name = "Header"
    gui.header.Size = UDim2.new(1, 0, 0, 70)
    gui.header.Position = UDim2.new(0, 0, 0, 0)
    gui.header.BackgroundColor3 = Color3.new(1, 0.85, 0)
    gui.header.BorderSizePixel = 0
    gui.header.Parent = gui.main
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 15)
    headerCorner.Parent = gui.header
    
    local headerGradient = Instance.new("UIGradient")
    headerGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0.9, 0.1)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 0.75, 0))
    })
    headerGradient.Rotation = 90
    headerGradient.Parent = gui.header
    
    -- T√≠tulo principal
    gui.title = Instance.new("TextLabel")
    gui.title.Name = "Title"
    gui.title.Size = UDim2.new(1, -60, 0, 35)
    gui.title.Position = UDim2.new(0, 15, 0, 5)
    gui.title.BackgroundTransparency = 1
    gui.title.TextColor3 = Color3.new(0, 0, 0)
    gui.title.Font = Enum.Font.GothamBold
    gui.title.TextSize = 18
    gui.title.TextXAlignment = Enum.TextXAlignment.Left
    gui.title.TextYAlignment = Enum.TextYAlignment.Center
    gui.title.Parent = gui.header
    
    -- Subt√≠tulo
    gui.subtitle = Instance.new("TextLabel")
    gui.subtitle.Name = "Subtitle"
    gui.subtitle.Size = UDim2.new(1, -60, 0, 20)
    gui.subtitle.Position = UDim2.new(0, 15, 0, 35)
    gui.subtitle.BackgroundTransparency = 1
    gui.subtitle.TextColor3 = Color3.new(0.2, 0.2, 0.2)
    gui.subtitle.Font = Enum.Font.Gotham
    gui.subtitle.TextSize = 12
    gui.subtitle.TextXAlignment = Enum.TextXAlignment.Left
    gui.subtitle.TextYAlignment = Enum.TextYAlignment.Center
    gui.subtitle.Parent = gui.header
    
    -- Bot√£o de minimizar/fechar
    gui.closeBtn = Instance.new("TextButton")
    gui.closeBtn.Name = "CloseButton"
    gui.closeBtn.Size = UDim2.new(0, 30, 0, 30)
    gui.closeBtn.Position = UDim2.new(1, -40, 0, 10)
    gui.closeBtn.BackgroundColor3 = Color3.new(1, 0.2, 0.2)
    gui.closeBtn.Text = "‚úï"
    gui.closeBtn.TextColor3 = Color3.new(1, 1, 1)
    gui.closeBtn.Font = Enum.Font.GothamBold
    gui.closeBtn.TextSize = 16
    gui.closeBtn.BorderSizePixel = 0
    gui.closeBtn.Parent = gui.header
    
    local closeBtnCorner = Instance.new("UICorner")
    closeBtnCorner.CornerRadius = UDim.new(0, 6)
    closeBtnCorner.Parent = gui.closeBtn
    
    -- ===== √ÅREA DE CONTE√öDO =====
    gui.content = Instance.new("ScrollingFrame")
    gui.content.Name = "Content"
    gui.content.Size = UDim2.new(1, -20, 1, -90)
    gui.content.Position = UDim2.new(0, 10, 0, 80)
    gui.content.BackgroundTransparency = 1
    gui.content.BorderSizePixel = 0
    gui.content.ScrollBarThickness = 6
    gui.content.ScrollBarImageColor3 = Color3.new(1, 0.85, 0)
    gui.content.CanvasSize = UDim2.new(0, 0, 0, 500)
    gui.content.Parent = gui.main
    
    -- ===== STATUS GERAL =====
    gui.statusFrame = Instance.new("Frame")
    gui.statusFrame.Name = "StatusFrame"
    gui.statusFrame.Size = UDim2.new(1, 0, 0, 50)
    gui.statusFrame.Position = UDim2.new(0, 0, 0, 10)
    gui.statusFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    gui.statusFrame.BorderSizePixel = 0
    gui.statusFrame.Parent = gui.content
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 10)
    statusCorner.Parent = gui.statusFrame
    
    local statusStroke = Instance.new("UIStroke")
    statusStroke.Color = Color3.new(0.3, 0.3, 0.3)
    statusStroke.Thickness = 1
    statusStroke.Parent = gui.statusFrame
    
    gui.statusLabel = Instance.new("TextLabel")
    gui.statusLabel.Name = "StatusLabel"
    gui.statusLabel.Size = UDim2.new(1, -20, 1, 0)
    gui.statusLabel.Position = UDim2.new(0, 10, 0, 0)
    gui.statusLabel.BackgroundTransparency = 1
    gui.statusLabel.TextColor3 = Color3.new(1, 1, 1)
    gui.statusLabel.Font = Enum.Font.Gotham
    gui.statusLabel.TextSize = 14
    gui.statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    gui.statusLabel.TextYAlignment = Enum.TextYAlignment.Center
    gui.statusLabel.Parent = gui.statusFrame
    
    -- ===== CONTROLE DE TAMANHO =====
    gui.sizeFrame = Instance.new("Frame")
    gui.sizeFrame.Name = "SizeFrame"
    gui.sizeFrame.Size = UDim2.new(1, 0, 0, 80)
    gui.sizeFrame.Position = UDim2.new(0, 0, 0, 70)
    gui.sizeFrame.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
    gui.sizeFrame.BorderSizePixel = 0
    gui.sizeFrame.Parent = gui.content
    
    local sizeCorner = Instance.new("UICorner")
    sizeCorner.CornerRadius = UDim.new(0, 10)
    sizeCorner.Parent = gui.sizeFrame
    
    local sizeStroke = Instance.new("UIStroke")
    sizeStroke.Color = Color3.new(1, 0.85, 0)
    sizeStroke.Thickness = 1
    sizeStroke.Parent = gui.sizeFrame
    
    gui.sizeLabel = Instance.new("TextLabel")
    gui.sizeLabel.Name = "SizeLabel"
    gui.sizeLabel.Size = UDim2.new(1, -20, 0, 25)
    gui.sizeLabel.Position = UDim2.new(0, 10, 0, 5)
    gui.sizeLabel.BackgroundTransparency = 1
    gui.sizeLabel.TextColor3 = Color3.new(1, 0.85, 0)
    gui.sizeLabel.Font = Enum.Font.GothamBold
    gui.sizeLabel.TextSize = 14
    gui.sizeLabel.TextXAlignment = Enum.TextXAlignment.Left
    gui.sizeLabel.Parent = gui.sizeFrame
    
    -- Slider
    gui.sliderBG = Instance.new("Frame")
    gui.sliderBG.Name = "SliderBackground"
    gui.sliderBG.Size = UDim2.new(0.8, 0, 0, 6)
    gui.sliderBG.Position = UDim2.new(0.1, 0, 0, 40)
    gui.sliderBG.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    gui.sliderBG.BorderSizePixel = 0
    gui.sliderBG.Parent = gui.sizeFrame
    
    local sliderBGCorner = Instance.new("UICorner")
    sliderBGCorner.CornerRadius = UDim.new(0, 3)
    sliderBGCorner.Parent = gui.sliderBG
    
    gui.sliderFill = Instance.new("Frame")
    gui.sliderFill.Name = "SliderFill"
    gui.sliderFill.Size = UDim2.new(0.33, 0, 1, 0)
    gui.sliderFill.Position = UDim2.new(0, 0, 0, 0)
    gui.sliderFill.BackgroundColor3 = Color3.new(1, 0.85, 0)
    gui.sliderFill.BorderSizePixel = 0
    gui.sliderFill.Parent = gui.sliderBG
    
    local sliderFillCorner = Instance.new("UICorner")
    sliderFillCorner.CornerRadius = UDim.new(0, 3)
    sliderFillCorner.Parent = gui.sliderFill
    
    gui.sliderHandle = Instance.new("Frame")
    gui.sliderHandle.Name = "SliderHandle"
    gui.sliderHandle.Size = UDim2.new(0, 20, 0, 20)
    gui.sliderHandle.Position = UDim2.new(0.33, -10, 0.5, -10)
    gui.sliderHandle.BackgroundColor3 = Color3.new(1, 1, 1)
    gui.sliderHandle.BorderSizePixel = 0
    gui.sliderHandle.Parent = gui.sliderBG
    
    local sliderHandleCorner = Instance.new("UICorner")
    sliderHandleCorner.CornerRadius = UDim.new(0, 10)
    sliderHandleCorner.Parent = gui.sliderHandle
    
    local sliderHandleStroke = Instance.new("UIStroke")
    sliderHandleStroke.Color = Color3.new(1, 0.85, 0)
    sliderHandleStroke.Thickness = 2
    sliderHandleStroke.Parent = gui.sliderHandle
    
    gui.sizeValue = Instance.new("TextLabel")
    gui.sizeValue.Name = "SizeValue"
    gui.sizeValue.Size = UDim2.new(0, 50, 0, 25)
    gui.sizeValue.Position = UDim2.new(1, -60, 0, 50)
    gui.sizeValue.BackgroundTransparency = 1
    gui.sizeValue.TextColor3 = Color3.new(1, 1, 1)
    gui.sizeValue.Font = Enum.Font.GothamBold
    gui.sizeValue.TextSize = 16
    gui.sizeValue.TextXAlignment = Enum.TextXAlignment.Center
    gui.sizeValue.Parent = gui.sizeFrame
end

-- ===== CRIAR BOT√ïES FUNCIONAIS =====
local function createFeatureButton(name, position, icon, color)
    local btnFrame = Instance.new("Frame")
    btnFrame.Name = name .. "Frame"
    btnFrame.Size = UDim2.new(1, 0, 0, 60)
    btnFrame.Position = position
    btnFrame.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
    btnFrame.BorderSizePixel = 0
    btnFrame.Parent = gui.content
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 10)
    btnCorner.Parent = btnFrame
    
    local btnStroke = Instance.new("UIStroke")
    btnStroke.Color = Color3.new(0.3, 0.3, 0.3)
    btnStroke.Thickness = 1
    btnStroke.Parent = btnFrame
    
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Button"
    btn.Size = UDim2.new(1, 0, 1, 0)
    btn.Position = UDim2.new(0, 0, 0, 0)
    btn.BackgroundTransparency = 1
    btn.Text = ""
    btn.Parent = btnFrame
    
    local iconLabel = Instance.new("TextLabel")
    iconLabel.Name = "Icon"
    iconLabel.Size = UDim2.new(0, 40, 0, 40)
    iconLabel.Position = UDim2.new(0, 15, 0.5, -20)
    iconLabel.BackgroundColor3 = color
    iconLabel.Text = icon
    iconLabel.TextColor3 = Color3.new(1, 1, 1)
    iconLabel.Font = Enum.Font.GothamBold
    iconLabel.TextSize = 18
    iconLabel.TextXAlignment = Enum.TextXAlignment.Center
    iconLabel.TextYAlignment = Enum.TextYAlignment.Center
    iconLabel.BorderSizePixel = 0
    iconLabel.Parent = btnFrame
    
    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 8)
    iconCorner.Parent = iconLabel
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Size = UDim2.new(1, -120, 0, 25)
    textLabel.Position = UDim2.new(0, 65, 0, 10)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextSize = 16
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Parent = btnFrame
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "Status"
    statusLabel.Size = UDim2.new(1, -120, 0, 20)
    statusLabel.Position = UDim2.new(0, 65, 0, 30)
    statusLabel.BackgroundTransparency = 1
    statusLabel.TextColor3 = Color3.new(0.7, 0.7, 0.7)
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextSize = 12
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.TextYAlignment = Enum.TextYAlignment.Center
    statusLabel.Parent = btnFrame
    
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "Toggle"
    toggleFrame.Size = UDim2.new(0, 50, 0, 25)
    toggleFrame.Position = UDim2.new(1, -65, 0.5, -12.5)
    toggleFrame.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = btnFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 12.5)
    toggleCorner.Parent = toggleFrame
    
    local toggleButton = Instance.new("Frame")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 21, 0, 21)
    toggleButton.Position = UDim2.new(0, 2, 0.5, -10.5)
    toggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggleFrame
    
    local toggleButtonCorner = Instance.new("UICorner")
    toggleButtonCorner.CornerRadius = UDim.new(0, 10.5)
    toggleButtonCorner.Parent = toggleButton
    
    return {
        frame = btnFrame,
        button = btn,
        icon = iconLabel,
        text = textLabel,
        status = statusLabel,
        toggleFrame = toggleFrame,
        toggleButton = toggleButton
    }
end

-- ===== SISTEMA DE ATUALIZA√á√ÉO =====
local function updateUI()
    local t = texts[config.currentLang]
    
    -- Atualizar textos principais
    gui.title.Text = t.title
    gui.subtitle.Text = t.subtitle
    gui.sizeLabel.Text = t.sizeLabel .. " (" .. config.headSize .. ")"
    gui.sizeValue.Text = tostring(config.headSize)
    
    -- Atualizar status geral
    local activeCount = 0
    if config.bodyEnabled then activeCount = activeCount + 1 end
    if config.headEnabled then activeCount = activeCount + 1 end
    
    gui.statusLabel.Text = "üìä " .. activeCount .. " " .. t.activeCount
    gui.statusLabel.TextColor3 = activeCount > 0 and Color3.new(0.2, 1, 0.2) or Color3.new(1, 0.3, 0.3)
    
    -- Atualizar bot√µes
    if gui.bodyButton then
        gui.bodyButton.text.Text = t.bodyBtn
        gui.bodyButton.status.Text = config.bodyEnabled and t.statusOn or t.statusOff
        gui.bodyButton.status.TextColor3 = config.bodyEnabled and Color3.new(0.2, 1, 0.2) or Color3.new(1, 0.3, 0.3)
        
        -- Animar toggle
        local togglePos = config.bodyEnabled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
        local toggleColor = config.bodyEnabled and Color3.new(1, 0.3, 0.3) or Color3.new(0.3, 0.3, 0.3)
        
        TweenService:Create(gui.bodyButton.toggleButton, TweenInfo.new(0.2), {Position = togglePos}):Play()
        TweenService:Create(gui.bodyButton.toggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = toggleColor}):Play()
    end
    
    if gui.headButton then
        gui.headButton.text.Text = t.headBtn
        gui.headButton.status.Text = config.headEnabled and t.statusOn or t.statusOff
        gui.headButton.status.TextColor3 = config.headEnabled and Color3.new(0.2, 1, 0.2) or Color3.new(1, 0.3, 0.3)
        
        -- Animar toggle
        local togglePos = config.headEnabled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
        local toggleColor = config.headEnabled and Color3.new(0.2, 0.5, 1) or Color3.new(0.3, 0.3, 0.3)
        
        TweenService:Create(gui.headButton.toggleButton, TweenInfo.new(0.2), {Position = togglePos}):Play()
        TweenService:Create(gui.headButton.toggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = toggleColor}):Play()
    end
    
    if gui.langButton then
        gui.langButton.text.Text = t.langBtn
        gui.langButton.status.Text = config.currentLang == "pt" and "Portugu√™s" or "English"
    end
    
    -- Atualizar slider
    local sliderPercent = (config.headSize - 5) / 45
    gui.sliderFill.Size = UDim2.new(sliderPercent, 0, 1, 0)
    gui.sliderHandle.Position = UDim2.new(sliderPercent, -10, 0.5, -10)
end

-- ===== FUNCIONALIDADE SLIDER =====
local function setupSlider()
    local dragging = false
    
    local function updateSlider(input)
        local sliderPos = gui.sliderBG.AbsolutePosition
        local sliderSize = gui.sliderBG.AbsoluteSize
        local mousePos = input.Position
        
        local relativePos = math.clamp((mousePos.X - sliderPos.X) / sliderSize.X, 0, 1)
        local newSize = math.floor(5 + (relativePos * 45)) -- 5 to 50
        
        config.headSize = newSize
        config.bodySize = newSize
        
        updateUI()
    end
    
    gui.sliderBG.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- ===== FUNCIONALIDADE DE ARRASTE =====
local function setupDragging()
    local dragging = false
    local dragStart, startPos
    
    gui.header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = gui.main.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            gui.main.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- ===== LOOP PRINCIPAL =====
local function setupHitboxLoop()
    connections.hitboxLoop = RunService.RenderStepped:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                pcall(function()
                    local char = player.Character
                    
                    -- Hitbox Cabe√ßa
                    local head = char:FindFirstChild("Head")
                    if head then
                        if not originals[head] then
                            originals[head] = {
                                Size = head.Size,
                                Transparency = head.Transparency,
                                BrickColor = head.BrickColor,
                                Material = head.Material,
                                CanCollide = head.CanCollide
                            }
                        end
                        
                        if config.headEnabled then
                            head.Size = Vector3.new(config.headSize, config.headSize, config.headSize)
                            head.Transparency = 0.6
                            head.BrickColor = BrickColor.new("Bright blue")
                            head.Material = Enum.Material.ForceField
                            head.CanCollide = false
                        else
                            local orig = originals[head]
                            if orig then
                                head.Size = orig.Size
                                head.Transparency = orig.Transparency
                                head.BrickColor = orig.BrickColor
                                head.Material = orig.Material
                                head.CanCollide = orig.CanCollide
                            end
                        end
                    end
                    
                    -- Hitbox Corpo
                    local root = char:FindFirstChild("HumanoidRootPart")
                    if root then
                        if not originals[root] then
                            originals[root] = {
                                Size = root.Size,
                                Transparency = root.Transparency,
                                BrickColor = root.BrickColor,
                                Material = root.Material,
                                CanCollide = root.CanCollide
                            }
                        end
                        
                        if config.bodyEnabled then
                            root.Size = Vector3.new(config.bodySize, config.bodySize, config.bodySize)
                            root.Transparency = 0.6
                            root.BrickColor = BrickColor.new("Bright red")
                            root.Material = Enum.Material.ForceField
                            root.CanCollide = false
                        else
                            local orig = originals[root]
                            if orig then
                                root.Size = orig.Size
                                root.Transparency = orig.Transparency
                                root.BrickColor = orig.BrickColor
                                root.Material = orig.Material
                                root.CanCollide = orig.CanCollide
                            end
                        end
                    end
                end)
            end
        end
    end)
end

-- ===== INICIALIZA√á√ÉO =====
local function init()
    -- Criar GUI
    createGUI()
    
    -- Criar bot√µes funcionais
    gui.bodyButton = createFeatureButton("Body", UDim2.new(0, 0, 0, 160), "üíÄ", Color3.new(1, 0.3, 0.3))
    gui.headButton = createFeatureButton("Head", UDim2.new(0, 0, 0, 230), "üéØ", Color3.new(0.2, 0.5, 1))
    gui.langButton = createFeatureButton("Lang", UDim2.new(0, 0, 0, 300), "üåê", Color3.new(0.3, 0.8, 0.3))
    
    -- Configurar eventos dos bot√µes
    gui.bodyButton.button.MouseButton1Click:Connect(function()
        config.bodyEnabled = not config.bodyEnabled
        
        -- Efeito visual
        TweenService:Create(gui.bodyButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 5, 0, 65)}):Play()
        wait(0.1)
        TweenService:Create(gui.bodyButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 0, 0, 60)}):Play()
        
        updateUI()
    end)
    
    gui.headButton.button.MouseButton1Click:Connect(function()
        config.headEnabled = not config.headEnabled
        
        -- Efeito visual
        TweenService:Create(gui.headButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 5, 0, 65)}):Play()
        wait(0.1)
        TweenService:Create(gui.headButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 0, 0, 60)}):Play()
        
        updateUI()
    end)
    
    gui.langButton.button.MouseButton1Click:Connect(function()
        config.currentLang = (config.currentLang == "pt") and "en" or "pt"
        
        -- Efeito visual
        TweenService:Create(gui.langButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 5, 0, 65)}):Play()
        wait(0.1)
        TweenService:Create(gui.langButton.frame, TweenInfo.new(0.1), {Size = UDim2.new(1, 0, 0, 60)}):Play()
        
        updateUI()
    end)
    
    -- Bot√£o fechar
    gui.closeBtn.MouseButton1Click:Connect(function()
        config.guiVisible = not config.guiVisible
        gui.main.Visible = config.guiVisible
        
        -- Efeito de fade
        if config.guiVisible then
            gui.main.BackgroundTransparency = 1
            TweenService:Create(gui.main, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
        end
    end)
    
    -- Hotkey F para mostrar/ocultar
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
            config.guiVisible = not config.guiVisible
            
            if config.guiVisible then
                gui.main.Visible = true
                gui.main.Size = UDim2.new(0, 0, 0, 0)
                gui.main.Position = UDim2.new(0.5, 0, 0.5, 0)
                
                TweenService:Create(gui.main, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
                    Size = UDim2.new(0, 320, 0, 400),
                    Position = UDim2.new(0, 20, 0.5, -200)
                }):Play()
            else
                TweenService:Create(gui.main, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 0, 0, 0),
                    Position = UDim2.new(0.5, 0, 0.5, 0)
                }):Play()
                
                wait(0.3)
                gui.main.Visible = false
            end
        end
    end)
    
    -- Configurar funcionalidades
    setupSlider()
    setupDragging()
    setupHitboxLoop()
    
    -- Atualizar UI inicial
    updateUI()
    
    -- Anima√ß√£o de entrada
    gui.main.Size = UDim2.new(0, 0, 0, 0)
    gui.main.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    TweenService:Create(gui.main, TweenInfo.new(0.8, Enum.EasingStyle.Back), {
        Size = UDim2.new(0, 320, 0, 400),
        Position = UDim2.new(0, 20, 0.5, -200)
    }):Play()
    
    -- Mensagem de boas-vindas
    createWelcomeMessage()
end

-- ===== MENSAGEM DE BOAS-VINDAS =====
local function createWelcomeMessage()
    local welcomeFrame = Instance.new("Frame")
    welcomeFrame.Name = "WelcomeFrame"
    welcomeFrame.Size = UDim2.new(0, 300, 0, 100)
    welcomeFrame.Position = UDim2.new(0.5, -150, 0, 50)
    welcomeFrame.BackgroundColor3 = Color3.new(0.05, 0.05, 0.05)
    welcomeFrame.BorderSizePixel = 0
    welcomeFrame.Parent = gui.screen
    
    local welcomeCorner = Instance.new("UICorner")
    welcomeCorner.CornerRadius = UDim.new(0, 15)
    welcomeCorner.Parent = welcomeFrame
    
    local welcomeStroke = Instance.new("UIStroke")
    welcomeStroke.Color = Color3.new(1, 0.85, 0)
    welcomeStroke.Thickness = 2
    welcomeStroke.Parent = welcomeFrame
    
    local welcomeGradient = Instance.new("UIGradient")
    welcomeGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(0.08, 0.08, 0.08)),
        ColorSequenceKeypoint.new(1, Color3.new(0.02, 0.02, 0.02))
    })
    welcomeGradient.Rotation = 45
    welcomeGradient.Parent = welcomeFrame
    
    local welcomeTitle = Instance.new("TextLabel")
    welcomeTitle.Size = UDim2.new(1, -20, 0, 35)
    welcomeTitle.Position = UDim2.new(0, 10, 0, 10)
    welcomeTitle.BackgroundTransparency = 1
    welcomeTitle.TextColor3 = Color3.new(1, 0.85, 0)
    welcomeTitle.Font = Enum.Font.GothamBold
    welcomeTitle.TextSize = 18
    welcomeTitle.Text = "üî• HUB POBREZA V3.0 CARREGADO!"
    welcomeTitle.TextXAlignment = Enum.TextXAlignment.Center
    welcomeTitle.Parent = welcomeFrame
    
    local welcomeSubtitle = Instance.new("TextLabel")
    welcomeSubtitle.Size = UDim2.new(1, -20, 0, 25)
    welcomeSubtitle.Position = UDim2.new(0, 10, 0, 45)
    welcomeSubtitle.BackgroundTransparency = 1
    welcomeSubtitle.TextColor3 = Color3.new(0.8, 0.8, 0.8)
    welcomeSubtitle.Font = Enum.Font.Gotham
    welcomeSubtitle.TextSize = 12
    welcomeSubtitle.Text = "Pressione 'F' para mostrar/ocultar ‚Ä¢ Desenvolvido por Poverty Team"
    welcomeSubtitle.TextXAlignment = Enum.TextXAlignment.Center
    welcomeSubtitle.Parent = welcomeFrame
    
    -- Anima√ß√£o de entrada
    welcomeFrame.Position = UDim2.new(0.5, -150, 0, -100)
    welcomeFrame.BackgroundTransparency = 1
    welcomeTitle.TextTransparency = 1
    welcomeSubtitle.TextTransparency = 1
    welcomeStroke.Transparency = 1
    
    -- Animar entrada
    TweenService:Create(welcomeFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Position = UDim2.new(0.5, -150, 0, 50),
        BackgroundTransparency = 0
    }):Play()
    
    TweenService:Create(welcomeStroke, TweenInfo.new(0.5), {Transparency = 0}):Play()
    TweenService:Create(welcomeTitle, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
    TweenService:Create(welcomeSubtitle, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
    
    -- Auto-fechar ap√≥s 4 segundos
    wait(4)
    
    TweenService:Create(welcomeFrame, TweenInfo.new(0.5), {
        Position = UDim2.new(0.5, -150, 0, -100),
        BackgroundTransparency = 1
    }):Play()
    
    TweenService:Create(welcomeStroke, TweenInfo.new(0.5), {Transparency = 1}):Play()
    TweenService:Create(welcomeTitle, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    TweenService:Create(welcomeSubtitle, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    
    wait(0.5)
    welcomeFrame:Destroy()
end

-- ===== SISTEMA DE NOTIFICA√á√ïES =====
local function createNotification(text, color, duration)
    local notifFrame = Instance.new("Frame")
    notifFrame.Name = "NotificationFrame"
    notifFrame.Size = UDim2.new(0, 250, 0, 50)
    notifFrame.Position = UDim2.new(1, 20, 0, 100)
    notifFrame.BackgroundColor3 = Color3.new(0.05, 0.05, 0.05)
    notifFrame.BorderSizePixel = 0
    notifFrame.Parent = gui.screen
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 10)
    notifCorner.Parent = notifFrame
    
    local notifStroke = Instance.new("UIStroke")
    notifStroke.Color = color
    notifStroke.Thickness = 2
    notifStroke.Parent = notifFrame
    
    local notifLabel = Instance.new("TextLabel")
    notifLabel.Size = UDim2.new(1, -20, 1, 0)
    notifLabel.Position = UDim2.new(0, 10, 0, 0)
    notifLabel.BackgroundTransparency = 1
    notifLabel.TextColor3 = Color3.new(1, 1, 1)
    notifLabel.Font = Enum.Font.Gotham
    notifLabel.TextSize = 14
    notifLabel.Text = text
    notifLabel.TextXAlignment = Enum.TextXAlignment.Left
    notifLabel.TextYAlignment = Enum.TextYAlignment.Center
    notifLabel.Parent = notifFrame
    
    -- Anima√ß√£o de entrada
    TweenService:Create(notifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Position = UDim2.new(1, -270, 0, 100)
    }):Play()
    
    -- Auto-remover
    wait(duration or 3)
    
    TweenService:Create(notifFrame, TweenInfo.new(0.3), {
        Position = UDim2.new(1, 20, 0, 100)
    }):Play()
    
    wait(0.3)
    notifFrame:Destroy()
end

-- ===== LIMPEZA E OTIMIZA√á√ÉO =====
Players.PlayerRemoving:Connect(function(player)
    if player.Character then
        for _, part in pairs(player.Character:GetChildren()) do
            if originals[part] then
                originals[part] = nil
            end
        end
    end
end)

-- ===== EXECUTAR INICIALIZA√á√ÉO =====
init()

-- ===== SISTEMA DE DEBUG (OPCIONAL) =====
local function debugLog(message)
    if config.debugMode then
        print("[HUB POBREZA V3.0] " .. message)
    end
end

-- ===== COMANDOS DE CONSOLE (OPCIONAL) =====
local function setupConsoleCommands()
    -- Comando para alternar debug
    game.Players.LocalPlayer.Chatted:Connect(function(message)
        if message:lower() == "/poverty debug" then
            config.debugMode = not config.debugMode
            createNotification("Debug Mode: " .. (config.debugMode and "ON" or "OFF"), 
                             Color3.new(0.3, 0.8, 0.3), 2)
        elseif message:lower() == "/poverty reset" then
            -- Reset todas as configura√ß√µes
            config.bodyEnabled = false
            config.headEnabled = false
            config.headSize = 20
            config.bodySize = 20
            updateUI()
            createNotification("Configura√ß√µes resetadas!", Color3.new(1, 0.85, 0), 2)
        elseif message:lower() == "/poverty hide" then
            config.guiVisible = false
            gui.main.Visible = false
        elseif message:lower() == "/poverty show" then
            config.guiVisible = true
            gui.main.Visible = true
        end
    end)
end

setupConsoleCommands()

debugLog("HUB POBREZA V3.0 inicializado com sucesso!")
debugLog("Pressione 'F' para mostrar/ocultar o menu")
debugLog("Use '/poverty debug' para ativar o modo debug")
